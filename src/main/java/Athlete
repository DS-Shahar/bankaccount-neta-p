public class Athlete {
private String name;
private Grade[] grades;
private int count;

public Athlete(String name,int size) {
	this.name= name;
	this.grades= new Grade[size];
	this.count=0;
	}
public Athlete(Athlete a1) {
	 this.name=a1.name;
	 this.grades = new Grade[a1.grades.length];
	 for(int i=0;i<a1.grades.length;i++) {
		 this.grades[i]=a1.grades[i];
	 }
	 this.count=a1.count;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public Grade[] getGrades() {
	return grades;
}
public void setGrades(Grade[] grades) {
	this.grades = grades;
}
public int getCount() {
	return count;
}
public void setCount(int count) {
	this.count = count;
}
public boolean addGrade(int s,String n) {
	if(count==grades.length) {
		return false;
	}
	grades[count]=new Grade(n,s);
	count++;
	return true;
	}

public int average() {
	int sum=0;
	for(int i=0;i<count;i++) {
		sum+=grades[i].getScore();
	}
	if(sum==0) {
		return -1;
	}
	return sum/count;
}	
public boolean allGradesAbove(int s) {
	for(int i=0;i<count;i++) {
		if(grades[i].getScore()<s) {
			return false;
		}
	}
	return true;
}
public boolean isBetter(Athlete other) {
	for(int i=0;i<this.count;i++) {
		for(int j=i;i<other.count;j++) {
			if(this.grades[i].getApparatus().equals(other.grades[j].getApparatus())){
				if(other.grades[j].getScore()>this.grades[i].getScore()) {
					return false;
				}
		
			}
		}
	}

return true;
}

}

